/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/frontend/plugins/ofi.js":
/*!**********************************************!*\
  !*** ./resources/js/frontend/plugins/ofi.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! npm.im/object-fit-images 3.2.3 */\nvar objectFitImages = function () {\n  'use strict';\n\n  var OFI = 'bfred-it:object-fit-images';\n  var propRegex = /(object-fit|object-position)\\s*:\\s*([-\\w\\s%]+)/g;\n  var testImg = typeof Image === 'undefined' ? {\n    style: {\n      'object-position': 1\n    }\n  } : new Image();\n  var supportsObjectFit = 'object-fit' in testImg.style;\n  var supportsObjectPosition = 'object-position' in testImg.style;\n  var supportsOFI = 'background-size' in testImg.style;\n  var supportsCurrentSrc = typeof testImg.currentSrc === 'string';\n  var nativeGetAttribute = testImg.getAttribute;\n  var nativeSetAttribute = testImg.setAttribute;\n  var autoModeEnabled = false;\n\n  function createPlaceholder(w, h) {\n    return \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\";\n  }\n\n  function polyfillCurrentSrc(el) {\n    if (el.srcset && !supportsCurrentSrc && window.picturefill) {\n      var pf = window.picturefill._; // parse srcset with picturefill where currentSrc isn't available\n\n      if (!el[pf.ns] || !el[pf.ns].evaled) {\n        // force synchronous srcset parsing\n        pf.fillImg(el, {\n          reselect: true\n        });\n      }\n\n      if (!el[pf.ns].curSrc) {\n        // force picturefill to parse srcset\n        el[pf.ns].supported = false;\n        pf.fillImg(el, {\n          reselect: true\n        });\n      } // retrieve parsed currentSrc, if any\n\n\n      el.currentSrc = el[pf.ns].curSrc || el.src;\n    }\n  }\n\n  function getStyle(el) {\n    var style = getComputedStyle(el).fontFamily;\n    var parsed;\n    var props = {};\n\n    while ((parsed = propRegex.exec(style)) !== null) {\n      props[parsed[1]] = parsed[2];\n    }\n\n    return props;\n  }\n\n  function setPlaceholder(img, width, height) {\n    // Default: fill width, no height\n    var placeholder = createPlaceholder(width || 1, height || 0); // Only set placeholder if it's different\n\n    if (nativeGetAttribute.call(img, 'src') !== placeholder) {\n      nativeSetAttribute.call(img, 'src', placeholder);\n    }\n  }\n\n  function onImageReady(img, callback) {\n    // naturalWidth is only available when the image headers are loaded,\n    // this loop will poll it every 100ms.\n    if (img.naturalWidth) {\n      callback(img);\n    } else {\n      setTimeout(onImageReady, 100, img, callback);\n    }\n  }\n\n  function fixOne(el) {\n    var style = getStyle(el);\n    var ofi = el[OFI];\n    style['object-fit'] = style['object-fit'] || 'fill'; // default value\n    // Avoid running where unnecessary, unless OFI had already done its deed\n\n    if (!ofi.img) {\n      // fill is the default behavior so no action is necessary\n      if (style['object-fit'] === 'fill') {\n        return;\n      } // Where object-fit is supported and object-position isn't (Safari < 10)\n\n\n      if (!ofi.skipTest && // unless user wants to apply regardless of browser support\n      supportsObjectFit && // if browser already supports object-fit\n      !style['object-position'] // unless object-position is used\n      ) {\n          return;\n        }\n    } // keep a clone in memory while resetting the original to a blank\n\n\n    if (!ofi.img) {\n      ofi.img = new Image(el.width, el.height);\n      ofi.img.srcset = nativeGetAttribute.call(el, \"data-ofi-srcset\") || el.srcset;\n      ofi.img.src = nativeGetAttribute.call(el, \"data-ofi-src\") || el.src; // preserve for any future cloneNode calls\n      // https://github.com/bfred-it/object-fit-images/issues/53\n\n      nativeSetAttribute.call(el, \"data-ofi-src\", el.src);\n\n      if (el.srcset) {\n        nativeSetAttribute.call(el, \"data-ofi-srcset\", el.srcset);\n      }\n\n      setPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height); // remove srcset because it overrides src\n\n      if (el.srcset) {\n        el.srcset = '';\n      }\n\n      try {\n        keepSrcUsable(el);\n      } catch (err) {\n        if (window.console) {\n          console.warn('https://bit.ly/ofi-old-browser');\n        }\n      }\n    }\n\n    polyfillCurrentSrc(ofi.img);\n    el.style.backgroundImage = \"url(\\\"\" + (ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"') + \"\\\")\";\n    el.style.backgroundPosition = style['object-position'] || 'center';\n    el.style.backgroundRepeat = 'no-repeat';\n    el.style.backgroundOrigin = 'content-box';\n\n    if (/scale-down/.test(style['object-fit'])) {\n      onImageReady(ofi.img, function () {\n        if (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n          el.style.backgroundSize = 'contain';\n        } else {\n          el.style.backgroundSize = 'auto';\n        }\n      });\n    } else {\n      el.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n    }\n\n    onImageReady(ofi.img, function (img) {\n      setPlaceholder(el, img.naturalWidth, img.naturalHeight);\n    });\n  }\n\n  function keepSrcUsable(el) {\n    var descriptors = {\n      get: function get(prop) {\n        return el[OFI].img[prop ? prop : 'src'];\n      },\n      set: function set(value, prop) {\n        el[OFI].img[prop ? prop : 'src'] = value;\n        nativeSetAttribute.call(el, \"data-ofi-\" + prop, value); // preserve for any future cloneNode\n\n        fixOne(el);\n        return value;\n      }\n    };\n    Object.defineProperty(el, 'src', descriptors);\n    Object.defineProperty(el, 'currentSrc', {\n      get: function get() {\n        return descriptors.get('currentSrc');\n      }\n    });\n    Object.defineProperty(el, 'srcset', {\n      get: function get() {\n        return descriptors.get('srcset');\n      },\n      set: function set(ss) {\n        return descriptors.set(ss, 'srcset');\n      }\n    });\n  }\n\n  function hijackAttributes() {\n    function getOfiImageMaybe(el, name) {\n      return el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n    }\n\n    if (!supportsObjectPosition) {\n      HTMLImageElement.prototype.getAttribute = function (name) {\n        return nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n      };\n\n      HTMLImageElement.prototype.setAttribute = function (name, value) {\n        return nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n      };\n    }\n  }\n\n  function fix(imgs, opts) {\n    var startAutoMode = !autoModeEnabled && !imgs;\n    opts = opts || {};\n    imgs = imgs || 'img';\n\n    if (supportsObjectPosition && !opts.skipTest || !supportsOFI) {\n      return false;\n    } // use imgs as a selector or just select all images\n\n\n    if (imgs === 'img') {\n      imgs = document.getElementsByTagName('img');\n    } else if (typeof imgs === 'string') {\n      imgs = document.querySelectorAll(imgs);\n    } else if (!('length' in imgs)) {\n      imgs = [imgs];\n    } // apply fix to all\n\n\n    for (var i = 0; i < imgs.length; i++) {\n      imgs[i][OFI] = imgs[i][OFI] || {\n        skipTest: opts.skipTest\n      };\n      fixOne(imgs[i]);\n    }\n\n    if (startAutoMode) {\n      document.body.addEventListener('load', function (e) {\n        if (e.target.tagName === 'IMG') {\n          fix(e.target, {\n            skipTest: opts.skipTest\n          });\n        }\n      }, true);\n      autoModeEnabled = true;\n      imgs = 'img'; // reset to a generic selector for watchMQ\n    } // if requested, watch media queries for object-fit change\n\n\n    if (opts.watchMQ) {\n      window.addEventListener('resize', fix.bind(null, imgs, {\n        skipTest: opts.skipTest\n      }));\n    }\n  }\n\n  fix.supportsObjectFit = supportsObjectFit;\n  fix.supportsObjectPosition = supportsObjectPosition;\n  hijackAttributes();\n  return fix;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/plugins/ofi.js\n");

/***/ }),

/***/ 5:
/*!****************************************************!*\
  !*** multi ./resources/js/frontend/plugins/ofi.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\Code\Compass\cpdev\resources\js\frontend\plugins\ofi.js */"./resources/js/frontend/plugins/ofi.js");


/***/ })

/******/ });