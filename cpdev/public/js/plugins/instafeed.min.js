/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/frontend/plugins/instafeed.min.js":
/*!********************************************************!*\
  !*** ./resources/js/frontend/plugins/instafeed.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Generated by CoffeeScript 1.9.3\n(function () {\n  var e;\n  e = function () {\n    function e(e, t) {\n      var n, r;\n      this.options = {\n        target: \"instafeed\",\n        get: \"popular\",\n        resolution: \"thumbnail\",\n        sortBy: \"none\",\n        links: !0,\n        mock: !1,\n        useHttp: !1\n      };\n      if (_typeof(e) == \"object\") for (n in e) {\n        r = e[n], this.options[n] = r;\n      }\n      this.context = t != null ? t : this, this.unique = this._genKey();\n    }\n\n    return e.prototype.hasNext = function () {\n      return typeof this.context.nextUrl == \"string\" && this.context.nextUrl.length > 0;\n    }, e.prototype.next = function () {\n      return this.hasNext() ? this.run(this.context.nextUrl) : !1;\n    }, e.prototype.run = function (t) {\n      var n, r, i;\n      if (typeof this.options.clientId != \"string\" && typeof this.options.accessToken != \"string\") throw new Error(\"Missing clientId or accessToken.\");\n      if (typeof this.options.accessToken != \"string\" && typeof this.options.clientId != \"string\") throw new Error(\"Missing clientId or accessToken.\");\n      return this.options.before != null && typeof this.options.before == \"function\" && this.options.before.call(this), typeof document != \"undefined\" && document !== null && (i = document.createElement(\"script\"), i.id = \"instafeed-fetcher\", i.src = t || this._buildUrl(), n = document.getElementsByTagName(\"head\"), n[0].appendChild(i), r = \"instafeedCache\" + this.unique, window[r] = new e(this.options, this), window[r].unique = this.unique), !0;\n    }, e.prototype.parse = function (e) {\n      var t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A, O, M, _, D;\n\n      if (_typeof(e) != \"object\") {\n        if (this.options.error != null && typeof this.options.error == \"function\") return this.options.error.call(this, \"Invalid JSON data\"), !1;\n        throw new Error(\"Invalid JSON response\");\n      }\n\n      if (e.meta.code !== 200) {\n        if (this.options.error != null && typeof this.options.error == \"function\") return this.options.error.call(this, e.meta.error_message), !1;\n        throw new Error(\"Error from Instagram: \" + e.meta.error_message);\n      }\n\n      if (e.data.length === 0) {\n        if (this.options.error != null && typeof this.options.error == \"function\") return this.options.error.call(this, \"No images were returned from Instagram\"), !1;\n        throw new Error(\"No images were returned from Instagram\");\n      }\n\n      this.options.success != null && typeof this.options.success == \"function\" && this.options.success.call(this, e), this.context.nextUrl = \"\", e.pagination != null && (this.context.nextUrl = e.pagination.next_url);\n\n      if (this.options.sortBy !== \"none\") {\n        this.options.sortBy === \"random\" ? M = [\"\", \"random\"] : M = this.options.sortBy.split(\"-\"), O = M[0] === \"least\" ? !0 : !1;\n\n        switch (M[1]) {\n          case \"random\":\n            e.data.sort(function () {\n              return .5 - Math.random();\n            });\n            break;\n\n          case \"recent\":\n            e.data = this._sortBy(e.data, \"created_time\", O);\n            break;\n\n          case \"liked\":\n            e.data = this._sortBy(e.data, \"likes.count\", O);\n            break;\n\n          case \"commented\":\n            e.data = this._sortBy(e.data, \"comments.count\", O);\n            break;\n\n          default:\n            throw new Error(\"Invalid option for sortBy: '\" + this.options.sortBy + \"'.\");\n        }\n      }\n\n      if (typeof document != \"undefined\" && document !== null && this.options.mock === !1) {\n        m = e.data, A = parseInt(this.options.limit, 10), this.options.limit != null && m.length > A && (m = m.slice(0, A)), u = document.createDocumentFragment(), this.options.filter != null && typeof this.options.filter == \"function\" && (m = this._filter(m, this.options.filter));\n\n        if (this.options.template != null && typeof this.options.template == \"string\") {\n          f = \"\", d = \"\", w = \"\", D = document.createElement(\"div\");\n\n          for (c = 0, N = m.length; c < N; c++) {\n            h = m[c], p = h.images[this.options.resolution];\n            if (_typeof(p) != \"object\") throw o = \"No image found for resolution: \" + this.options.resolution + \".\", new Error(o);\n            E = p.width, y = p.height, b = \"square\", E > y && (b = \"landscape\"), E < y && (b = \"portrait\"), v = p.url, l = window.location.protocol.indexOf(\"http\") >= 0, l && !this.options.useHttp && (v = v.replace(/https?:\\/\\//, \"//\")), d = this._makeTemplate(this.options.template, {\n              model: h,\n              id: h.id,\n              link: h.link,\n              type: h.type,\n              image: v,\n              width: E,\n              height: y,\n              orientation: b,\n              caption: this._getObjectProperty(h, \"caption.text\"),\n              likes: h.likes.count,\n              comments: h.comments.count,\n              location: this._getObjectProperty(h, \"location.name\")\n            }), f += d;\n          }\n\n          D.innerHTML = f, i = [], r = 0, n = D.childNodes.length;\n\n          while (r < n) {\n            i.push(D.childNodes[r]), r += 1;\n          }\n\n          for (x = 0, C = i.length; x < C; x++) {\n            L = i[x], u.appendChild(L);\n          }\n        } else for (T = 0, k = m.length; T < k; T++) {\n          h = m[T], g = document.createElement(\"img\"), p = h.images[this.options.resolution];\n          if (_typeof(p) != \"object\") throw o = \"No image found for resolution: \" + this.options.resolution + \".\", new Error(o);\n          v = p.url, l = window.location.protocol.indexOf(\"http\") >= 0, l && !this.options.useHttp && (v = v.replace(/https?:\\/\\//, \"//\")), g.src = v, this.options.links === !0 ? (t = document.createElement(\"a\"), t.href = h.link, t.appendChild(g), u.appendChild(t)) : u.appendChild(g);\n        }\n\n        _ = this.options.target, typeof _ == \"string\" && (_ = document.getElementById(_));\n        if (_ == null) throw o = 'No element with id=\"' + this.options.target + '\" on page.', new Error(o);\n        _.appendChild(u), a = document.getElementsByTagName(\"head\")[0], a.removeChild(document.getElementById(\"instafeed-fetcher\")), S = \"instafeedCache\" + this.unique, window[S] = void 0;\n\n        try {\n          delete window[S];\n        } catch (P) {\n          s = P;\n        }\n      }\n\n      return this.options.after != null && typeof this.options.after == \"function\" && this.options.after.call(this), !0;\n    }, e.prototype._buildUrl = function () {\n      var e, t, n;\n      e = \"https://api.instagram.com/v1\";\n\n      switch (this.options.get) {\n        case \"popular\":\n          t = \"media/popular\";\n          break;\n\n        case \"tagged\":\n          if (!this.options.tagName) throw new Error(\"No tag name specified. Use the 'tagName' option.\");\n          t = \"tags/\" + this.options.tagName + \"/media/recent\";\n          break;\n\n        case \"location\":\n          if (!this.options.locationId) throw new Error(\"No location specified. Use the 'locationId' option.\");\n          t = \"locations/\" + this.options.locationId + \"/media/recent\";\n          break;\n\n        case \"user\":\n          if (!this.options.userId) throw new Error(\"No user specified. Use the 'userId' option.\");\n          t = \"users/\" + this.options.userId + \"/media/recent\";\n          break;\n\n        default:\n          throw new Error(\"Invalid option for get: '\" + this.options.get + \"'.\");\n      }\n\n      return n = e + \"/\" + t, this.options.accessToken != null ? n += \"?access_token=\" + this.options.accessToken : n += \"?client_id=\" + this.options.clientId, this.options.limit != null && (n += \"&count=\" + this.options.limit), n += \"&callback=instafeedCache\" + this.unique + \".parse\", n;\n    }, e.prototype._genKey = function () {\n      var e;\n      return e = function e() {\n        return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);\n      }, \"\" + e() + e() + e() + e();\n    }, e.prototype._makeTemplate = function (e, t) {\n      var n, r, i, s, o;\n      r = /(?:\\{{2})([\\w\\[\\]\\.]+)(?:\\}{2})/, n = e;\n\n      while (r.test(n)) {\n        s = n.match(r)[1], o = (i = this._getObjectProperty(t, s)) != null ? i : \"\", n = n.replace(r, function () {\n          return \"\" + o;\n        });\n      }\n\n      return n;\n    }, e.prototype._getObjectProperty = function (e, t) {\n      var n, r;\n      t = t.replace(/\\[(\\w+)\\]/g, \".$1\"), r = t.split(\".\");\n\n      while (r.length) {\n        n = r.shift();\n        if (!(e != null && n in e)) return null;\n        e = e[n];\n      }\n\n      return e;\n    }, e.prototype._sortBy = function (e, t, n) {\n      var r;\n      return r = function r(e, _r) {\n        var i, s;\n        return i = this._getObjectProperty(e, t), s = this._getObjectProperty(_r, t), n ? i > s ? 1 : -1 : i < s ? 1 : -1;\n      }, e.sort(r.bind(this)), e;\n    }, e.prototype._filter = function (e, t) {\n      var n, r, i, s, o;\n      n = [], r = function r(e) {\n        if (t(e)) return n.push(e);\n      };\n\n      for (i = 0, o = e.length; i < o; i++) {\n        s = e[i], r(s);\n      }\n\n      return n;\n    }, e;\n  }(), function (e, t) {\n    return  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n  }(this, function () {\n    return e;\n  });\n}).call(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/plugins/instafeed.min.js\n");

/***/ }),

/***/ 4:
/*!**************************************************************!*\
  !*** multi ./resources/js/frontend/plugins/instafeed.min.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\Code\Compass\cpdev\resources\js\frontend\plugins\instafeed.min.js */"./resources/js/frontend/plugins/instafeed.min.js");


/***/ })

/******/ });